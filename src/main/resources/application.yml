spring:
  datasource:
    url: jdbc:h2:tcp://localhost/~/blanken
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        # sysout으로 로그를 찍는 코드이다.
        # show_sql: true #띄어쓰기 8칸
        format_sql: true #띄어쓰기 8칸

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: bop1Xit1h1VpZz14ZJuV
            client-secret: kG3SfF1Vh7
            redirect-uri: "http://localhost:8080/blanken/api/login/oauth2/code/naver" #Authorize 코드를 받을 주소
            authorization-grant-type: authorization_code
            scope: name, email, nickname
            client-name: Naver

          kakao:
            client-id: de4974aeadfbbd61f1898bdc24399048
            redirect-uri: "http://localhost:8080/blanken/api/login/oauth2/code/kakao"
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email #동의 항목
            client-name: Kakao

        provider: #구글, 페이스북은 provider를 제공하지만 카카오, 네이버는 제공하지 않으므로 필요한 정보를 추가해야함.
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #네이버 로그인 인증을 요청
            token-uri: https://nid.naver.com/oauth2.0/token #접근 토큰의 발급,갱신,삭제를 요청
            user-info-uri: https://openapi.naver.com/v1/nid/me #네이버 회원의 프로필을 조회합니다.
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id


# jwt토큰 시크릿 키 설정
jwt:
  secret: SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c$bGLYvkU7zTjEm2H62goqXdyXo4ShA81lbU81DS1Aa2E


logging.level:
  #jpa에 의해 실행되는 sql들을 로그에 찍어줌.
  org.hibernate.SQL: debug
  #?로 뜨는 쿼리 파리미터 요소의 타입을 로그로 찍어 줌.
  org.hibernate.type: trace



server:
  port: 8081
  servlet:
    context-path: /blanken/api

